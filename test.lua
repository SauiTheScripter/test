local a,b={{1,'DataModel',{'test'},{{2,'ReplicatedStorage',{'ReplicatedStorage'},{{3,'ModuleScript',{'main'}}}}}}}local c={[3]=function()local c,d,e,f,g=b(3)local h={}h.File=function()print(123)end return h end}do local d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s=task,setmetatable,error,newproxy,getmetatable,next,table,unpack,coroutine,script,type,require,pcall,getfenv,setfenv,rawget local t,u,v,w,x,y,z,A,B,C,D=j.insert,j.remove,j.freeze or function(t)return t end,d and d.defer or function(t,...)local u=l.create(t)l.resume(u,...)return u end,'0.0.0-venv',{},{},{},{},{},{}local E,F={GetChildren=function(E)local F,G=D[E],{}for H in i,F do t(G,H)end return G end,FindFirstChild=function(E,F)if not F then f('Argument 1 missing or nil',2)end for G in i,D[E]do if G.Name==F then return G end end return end,GetFullName=function(E)local F,G=E.Name,E.Parent while G do F=G.Name..'.'..F G=G.Parent end return'VirtualEnv.'..F end},{}for G,H in i,E do F[G]=function(I,...)if not D[I]then f("Expected ':' not '.' calling member function "..G,1)end return H(I,...)end end local I=function(I,J,K)local L,M,N,O,P=e({},{__mode='k'}),function(L)f(L..' is not a valid (virtual) member of '..I..' "'..J..'"',1)end,function(L)f('Unable to assign (virtual) property '..L..'. Property is read only',1)end,(g(true))local Q=h(O)Q.__index=function(R,S)if S=='ClassName'then return I elseif S=='Name'then return J elseif S=='Parent'then return K elseif I=='StringValue'and S=='Value'then return P else local T=F[S]if T then return T end end for T in i,L do if T.Name==S then return T end end M(S)end Q.__newindex=function(R,S,T)if S=='ClassName'then N(S)elseif S=='Name'then J=T elseif S=='Parent'then if T==O then return end if K~=nil then D[K][O]=nil end K=T if T~=nil then D[T][O]=true end elseif I=='StringValue'and S=='Value'then P=T else M(S)end end Q.__tostring=function()return J end D[O]=L if K~=nil then D[K][O]=true end return O end local function J(K,L)local M,N,O,P=K[1],K[2],K[3],K[4]local Q=u(O,1)local R=I(N,Q,L)y[M]=R if O then for S,T in i,O do R[S]=T end end if P then for S,T in i,P do J(T,R)end end return R end local K={}for L,M in i,a do t(K,J(M))end for N,O in i,c do local P=y[N]z[P]=O local Q=P.ClassName if Q=='LocalScript'or Q=='Script'then t(B,P)end end local P=function(P)local Q,R=P.ClassName,A[P]if R and Q=='ModuleScript'then return k(R)end local S=z[P]if not S then return end if Q=='LocalScript'or Q=='Script'then S()return else local T={S()}A[P]=T return k(T)end end function b(Q)local R=y[Q]local S=z[R]if not S then return end local T,U,V,W,X,Y,Z=false,v{Version=x,Script=m,Shared=C,GetScript=function()return m end,GetShared=function()return C end},R,function(T,...)if D[T]and T.ClassName=='ModuleScript'and z[T]then return P(T)end return o(T,...)end local aa,ab=function(_,...)if not T then Z()end if n(_)=='number'and _>=0 then if _==0 then return Y else _=_+1 local aa,ab=p(q,_)if aa and ab==X then return Y end end end return q(_,...)end,function(aa,ab,...)if not T then Z()end if n(aa)=='number'and aa>=0 then if aa==0 then return r(Y,ab)else aa=aa+1 local _,ac=p(q,aa)if _ and ac==X then return r(Y,ab)end end end return r(aa,ab,...)end function Z()X=q(0)local ac={maui=U,script=V,require=W,getfenv=aa,setfenv=ab}Y=e({},{__index=function(_,ad)local ae=s(Y,ad)if ae~=nil then return ae end local af=ac[ad]if af~=nil then return af end return X[ad]end})r(S,Y)T=true end return U,V,W,aa,ab end for aa,ab in i,B do w(P,ab)end do local ac for ad,ae in i,K do if ae.ClassName=='ModuleScript'and ae.Name=='MainModule'then ac=ae break end end if ac then return P(ac)end end end
